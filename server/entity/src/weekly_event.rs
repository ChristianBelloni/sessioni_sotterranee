//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "weekly_event")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub date: DateTimeWithTimeZone,
    pub title: String,
    pub description: Option<String>,
    pub genre: String,
    pub url: Option<String>,
    pub image: Option<String>,
    pub location: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::attending::Entity")]
    Attending,
    #[sea_orm(has_many = "super::interested::Entity")]
    Interested,
}

impl Related<super::attending::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Attending.def()
    }
}

impl Related<super::interested::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Interested.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
